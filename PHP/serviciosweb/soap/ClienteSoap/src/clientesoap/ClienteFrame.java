/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package clientesoap;

import com.google.gson.JsonArray;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParser;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.Reader;
import java.io.UnsupportedEncodingException;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;
import java.net.URLEncoder;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;

import org.apache.axis.client.Service; 
import org.apache.axis.client.Call;
import javax.xml.namespace.QName;
import javax.xml.rpc.ParameterMode;
import javax.xml.rpc.ServiceException;
import java.rmi.RemoteException;

/**
 *
 * @author link
 */
public class ClienteFrame extends javax.swing.JFrame {
    
    private static final String servicio ="http://localhost/serviciosweb/soap/servicio/servicio.php?wsdl";

    /**
     * Creates new form ClienteFrame
     */
    public ClienteFrame() {

        initComponents();
        procesarListadoSOAP();
        procesarDatosSOAP();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tListadoSOAP = new javax.swing.JTextArea();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tOtraSOAP = new javax.swing.JTextArea();
        jPanel5 = new javax.swing.JPanel();
        bConectar = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        tNombre = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        bBuscar = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        tBuscar = new javax.swing.JTextArea();
        jPanel7 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        tAlumno = new javax.swing.JTextField();
        tCalificacion = new javax.swing.JTextField();
        bInsertarSOAP = new javax.swing.JButton();
        bInsertarBD = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Listado SOAP"));

        tListadoSOAP.setColumns(20);
        tListadoSOAP.setRows(5);
        jScrollPane1.setViewportView(tListadoSOAP);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Otra información SOAP"));

        tOtraSOAP.setColumns(20);
        tOtraSOAP.setRows(5);
        jScrollPane4.setViewportView(tOtraSOAP);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        bConectar.setText("Conectar y Obtener Datos");
        bConectar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bConectarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(bConectar)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(bConectar))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Consultar Alumno(s)"));

        jLabel1.setText("Nombre:");

        bBuscar.setText("Buscar");
        bBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bBuscarActionPerformed(evt);
            }
        });

        tBuscar.setColumns(20);
        tBuscar.setRows(5);
        jScrollPane5.setViewportView(tBuscar);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(bBuscar))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jScrollPane5)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(bBuscar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Insertar Alumno"));

        jLabel2.setText("Nombre:");

        jLabel3.setText("Calificación:");

        bInsertarSOAP.setText("Insertar via SOAP");
        bInsertarSOAP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bInsertarSOAPActionPerformed(evt);
            }
        });

        bInsertarBD.setText("Insertar ControladorBD");
        bInsertarBD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bInsertarBDActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tAlumno)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(tCalificacion, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(bInsertarSOAP)
                        .addGap(58, 58, 58)
                        .addComponent(bInsertarBD)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tCalificacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bInsertarSOAP)
                    .addComponent(bInsertarBD))
                .addGap(24, 24, 24))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bConectarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bConectarActionPerformed
        //leer listado XML
        procesarListadoSOAP();
        procesarDatosSOAP();
    }//GEN-LAST:event_bConectarActionPerformed

    private void bBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bBuscarActionPerformed
        buscarAlumno();
    }//GEN-LAST:event_bBuscarActionPerformed

    private void bInsertarSOAPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bInsertarSOAPActionPerformed
        insertarAlumnoSOAP();
    }//GEN-LAST:event_bInsertarSOAPActionPerformed

    private void bInsertarBDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bInsertarBDActionPerformed
        insertarAlumnoBD();
    }//GEN-LAST:event_bInsertarBDActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClienteFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClienteFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClienteFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClienteFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClienteFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bBuscar;
    private javax.swing.JButton bConectar;
    private javax.swing.JButton bInsertarBD;
    private javax.swing.JButton bInsertarSOAP;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTextField tAlumno;
    private javax.swing.JTextArea tBuscar;
    private javax.swing.JTextField tCalificacion;
    private javax.swing.JTextArea tListadoSOAP;
    private javax.swing.JTextField tNombre;
    private javax.swing.JTextArea tOtraSOAP;
    // End of variables declaration//GEN-END:variables

    
    private void procesarListadoSOAP() {
        this.tListadoSOAP.setText("");
        Service service = new Service();
        Call call;
        try {
            // Metodo call con el que lo llamamos
            call = (Call) service.createCall();
            // Vamos a conectarnos al servicio
            String ws_url = this.servicio;
            call.setTargetEndpointAddress(ws_url);
            call.clearOperation();
            call.setOperationName(new QName("http://schemas.xmlsoap.org/wsdl/","listado"));
            // Parametro de entrada -- "nombre" => "xsd:string"
            QName QNAME_TYPE_STRING = new QName("string");
            call.addParameter("nombre",QNAME_TYPE_STRING,ParameterMode.IN);
            // Aquí vemos que es un array como hemos indicado en el servidor
            // Como los vamos a obtener todos, lo dejamos en blanco
            String[] params = {""};
            // Parametro de retorno, que es de tipo string
            call.setReturnType(QNAME_TYPE_STRING);
            // Obtenemos la respuesta de llamar al servicio con estos parámetros
            String res = (String) call.invoke(params);

            // Procesamos el JSON
            JsonParser parser = new JsonParser();
            JsonArray gsonArr = parser.parse(res).getAsJsonArray();

            for (JsonElement obj : gsonArr) {
            JsonObject gsonObj = obj.getAsJsonObject();
            String cad;
            cad = gsonObj.get("id").getAsInt() + ".- " + gsonObj.get("nombre").getAsString() + ": " + gsonObj.get("calificacion").getAsFloat();
            this.tListadoSOAP.append(cad + "\n");
            
            }
            
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            }
    }

    
    private void procesarDatosSOAP() {
        this.tOtraSOAP.setText("");
        Service service = new Service();
        Call call;
        try {
            // Metodo call con el que lo llamamos
            call = (Call) service.createCall();
            // Vamos a conectarnos al servicio
            String ws_url = this.servicio;
            call.setTargetEndpointAddress(ws_url);
            call.clearOperation();
            //cargamos el servicio
            call.setOperationName(new QName("http://schemas.xmlsoap.org/wsdl/","resultado"));
            // Parametro de entrada -- "tipo" => "xsd:string"
            // Parámetros de dalida: "return" => "xsd:integer"
            QName QNAME_TYPE_STRING = new QName("string");
            call.addParameter("tipo",QNAME_TYPE_STRING,ParameterMode.IN);
            // Aquí vemos que es un array como hemos indicado en el servidor
            // Como los vamos a obtener todos, lo dejamos en blanco
            String[] params = {"aprobados"};
            // Parametro de retorno, que es de tipo string
            call.setReturnType(QNAME_TYPE_STRING);
            // Obtenemos la respuesta de llamar al servicio con estos parámetros
            // Aprobados
            String res = (String) call.invoke(params);
            String cad = "Aprobados: " + res +"\n";
            //Suspensos
            params[0] = "suspensos";
            res = (String) call.invoke(params);
            cad += "Suspensos: " + res +"\n";
            //media
            params[0] = "media";
            res = (String) call.invoke(params);
            cad += "Media: " + res +"\n";
            this.tOtraSOAP.append(cad);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }

    private void buscarAlumno() {
        String nombre = this.tNombre.getText();
        buscarAlumnoSOAP(nombre);
    }


    private void buscarAlumnoSOAP(String nombre) {
        this.tBuscar.setText("Información del alumno por SOAP:\n");
        Service service = new Service();
        Call call;
        try {
            // Metodo call con el que lo llamamos
            call = (Call) service.createCall();
            // Vamos a conectarnos al servicio
            String ws_url = this.servicio;
            call.setTargetEndpointAddress(ws_url);
            call.clearOperation();
            // Nombre del servicio
            call.setOperationName(new QName("http://schemas.xmlsoap.org/wsdl/","listado"));
            // Parametro de entrada -- "nombre" => "xsd:string"
            // Parámetros de dalida: "return" => "xsd:string"
            QName QNAME_TYPE_STRING = new QName("string");
            call.addParameter("nombre",QNAME_TYPE_STRING,ParameterMode.IN);
            // Aquí vemos que es un array como hemos indicado en el servidor
            // Como los vamos a obtener todos, lo dejamos en blanco
            String[] params = {nombre};
            // Parametro de retorno, que es de tipo string
            call.setReturnType(QNAME_TYPE_STRING);
            // Obtenemos la respuesta de llamar al servicio con estos parámetros
            String res = (String) call.invoke(params);

            // Procesamos JSON
            JsonParser parser = new JsonParser();
            JsonArray gsonArr = parser.parse(res).getAsJsonArray();

            for (JsonElement obj : gsonArr) {
            JsonObject gsonObj = obj.getAsJsonObject();
            String cad;
            cad = gsonObj.get("id").getAsInt() + ".- " + gsonObj.get("nombre").getAsString() + ": " + gsonObj.get("calificacion").getAsFloat();
            this.tBuscar.append(cad + "\n");
            
            }
            
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            }
    }

    private void insertarAlumnoSOAP() {
        String alumno = this.tAlumno.getText();
        Float calificacion = new Float(tCalificacion.getText()); // Debe ser un objeto

        Service service = new Service();
        Call call;
        try {
            // Metodo call con el que lo llamamos
            call = (Call) service.createCall();
            // Vamos a conectarnos al servicio
            String ws_url = this.servicio;
            call.setTargetEndpointAddress(ws_url);
            call.clearOperation();
            // Nombre del servicio
            call.setOperationName(new QName("http://schemas.xmlsoap.org/wsdl/", "insertar"));
            // Parámetros de entrada
            //"nombre" => "xsd:string", "calificacion" => "xsd:decimal"
            // Parámetros de dalida: "return" => "xsd:integer"
            QName QNAME_TYPE_STRING = new QName("string");
            QName QNAME_TYPE_DECIMAL = new QName("decimal");
            QName QNAME_TYPE_INTEGER = new QName("integer");
            call.addParameter("nombre", QNAME_TYPE_STRING, ParameterMode.IN);
            call.addParameter("calificacion", QNAME_TYPE_DECIMAL, ParameterMode.IN);
            // Aquí vemos que es un array como hemos indicado en el servidor
            // Como son de varios, pues usamos Object
            Object [] params = {alumno, calificacion};
            // Parametro de retorno, que es de tipo string
            call.setReturnType(QNAME_TYPE_STRING);
            // Obtenemos la respuesta de llamar al servicio con estos parámetros
            Integer res = (Integer) call.invoke(params);
            System.out.println(res.toString());
        } catch (Exception ex) {
            //JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }

    private void insertarAlumnoBD() {
        // Habria que comprbar que no existe antes y bla bla bla bla ba
       int res = 0;
       String alumno = this.tAlumno.getText();
       String calificacion = this.tCalificacion.getText();
           ControladorBD c = ControladorBD.nuevaConexionBD();
           c.abrirBD();
           String consulta = "insert into alumnos (nombre, calificacion) values ('"+alumno+"','"+calificacion+"')";
           //System.out.println(consulta);
           res = c.actualizarBD(consulta);
           c.cerrarBD(); 
    }
             
           
}
